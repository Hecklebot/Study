<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.chopchop.dao.ProductDao">

  <!-- 컬럼 이름과 자바 객체의 프로퍼티 이름을 연결한다. -->
  <resultMap type="Product" id="ProductMap">
    <id column="product_id" property="productNo"/>
    <result column="title" property="title"/>
    <result column="price" property="price"/>
    <result column="detail" property="detail"/>
    <result column="stock" property="stock"/>
    <result column="discount" property="discount"/>
    <result column="category" property="category"/>
  </resultMap>
  
  <resultMap type="Product" id="findWithFilesMap">
    <id column="product_id" property="productNo"/>
    <result column="title" property="title"/>
    <result column="price" property="price"/>
    <result column="detail" property="detail"/>
    <result column="stock" property="stock"/>
    <result column="discount" property="discount"/>
    <result column="category" property="category"/>
    
    <collection property="files" ofType="PhotoFile">
      <id column="photo_id" property="photoFileNo"/>
      <result column="file_path" property="filePath"/>
      <result column="product_id" property="productNo"/>
    </collection>
  </resultMap>
  
  <resultMap type="Product" id="findWithFilesCommentMap">
    <id column="product_id" property="productNo"/>
    <result column="title" property="title"/>
    <result column="price" property="price"/>
    <result column="detail" property="detail"/>
    <result column="stock" property="stock"/>
    <result column="discount" property="discount"/>
    <result column="category" property="category"/>
    
    <collection property="files" ofType="PhotoFile">
      <id column="photo_id" property="photoFileNo"/>
      <result column="file_path" property="filePath"/>
      <result column="product_id" property="productNo"/>
    </collection>
    
    <collection property="comments" ofType="Comment">
      <id column="comment_id" property="commentNo"/>
      <result column="product_id" property="productNo"/>
      <result column="member_id" property="memberNo"/>
      <result column="title ct" property="title"/>
      <result column="content cc" property="content"/>
      <result column="created_date" property="createdDate"/>
    </collection>
  </resultMap>

  <select id="findAll" resultMap="findWithFilesMap">
    select
      p.product_id,
      p.title,
      p.price,
      p.detail,
      p.stock,
      p.discount,
      p.category,
      f.photo_id,
      f.file_path
    from 
      product p 
        left outer join store_photo f on p.product_id=f.product_id
    order by p.product_id desc
  </select>
  
  <select id="findBy" parameterType="int" resultMap="ProductMap">
    select
      product_id,
      title,
      price,
      detail,
      stock,
      discount,
      category
    from
      product
    where
      product_id=#{value}
  </select>
  
  <select id="findWithFilesBy" 
          parameterType="int" 
          resultMap="findWithFilesCommentMap">
    select
      p.product_id,
      p.title,
      p.price,
      p.detail,
      p.stock,
      p.discount,
      p.category,
      f.photo_id,
      f.file_path,
      c.comment_id,
      c.title ct,
      c.content cc,
      c.created_date
    from 
      product p 
        left outer join store_photo f on p.product_id=f.product_id
        left outer join product_comment c on p.product_id=c.product_id
    where
      p.product_id=#{value}
  </select>
  
  <insert id="insert" 
          parameterType="Product"
          useGeneratedKeys="true"
          keyColumn="product_id"
          keyProperty="productNo">
    insert into product(title,price,detail,stock,discount, category)
    values(#{title},#{price},#{detail},#{stock},#{discount}, #{category})
  </insert>
  
  <update id="update" parameterType="Product">
    update product set
      title=#{title},
      price=#{price},
      detail=#{detail},
      stock=#{stock},
      discount=#{discount},
      category=#{category}
    where product_id=#{productNo}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from product
    where product_id=#{value}
  </delete>
</mapper>