<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.chopchop.dao.ProductDao">

  <!-- 컬럼 이름과 자바 객체의 프로퍼티 이름을 연결한다. -->
  <resultMap type="Product" id="ProductMap">
    <id column="product_id" property="productNo"/>
    <result column="title" property="title"/>
    <result column="price" property="price"/>
    <result column="detail" property="detail"/>
    <result column="stock" property="stock"/>
    <result column="discount" property="discount"/>
    <result column="view_count" property="viewCount"/>
  </resultMap>
  
  <resultMap type="Product" id="ProductWithFilesMap">
    <id column="product_id" property="productNo"/>
    <result column="title" property="title"/>
    <result column="price" property="price"/>
    <result column="detail" property="detail"/>
    <result column="stock" property="stock"/>
    <result column="discount" property="discount"/>
    <result column="view_count" property="viewCount"/>

    <collection property="files" ofType="photoFile">
      <id column="photo_id" property="photoNo"/>
      <result column="product_id" property="productNo"/>
      <result column="file_path" property="filePath"/>
    </collection>
  </resultMap>

  <select id="findAll" resultMap="ProductWithFilesMap">
        select
      p.product_id,
      p.title,
      p.price,
      p.stock,
      f.photo_id,
      f.file_path
        from 
      product p 
        left outer join store_photo f on p.product_id=f.product_id
    order by product_id desc
  </select>
  
  <select id="findBy" parameterType="int" resultMap="ProductMap">
        select
      product_id,
      title,
      price,
      detail,
      stock,
      discount
    from product
    where product_id=#{value} 
  </select>

    <select id="findWithFilesBy" 
          parameterType="int" 
          resultMap="ProductWithFilesMap">
    select
      p.product_id,
      p.title,
      p.price,
      p.detail,
      p.stock,
      p.discount,
      p.view_count,
      f.photo_id,
      f.file_path
    from 
      product p 
        left outer join store_photo f on p.product_id=f.product_id
    where 
      p.product_id=#{value}
  </select>

<!-- 검색기능 추가 시작 -->
   <select id="findByKeyword"
          parameterType="string"
          resultMap="ProductWithFilesMap">
    
        select
      p.product_id,
      p.title,
      p.price,
      p.stock,
      f.photo_id,
      f.file_path
        from 
      product p 
        left outer join store_photo f on p.product_id=f.product_id

        <choose>
        <when test ="searchOption == 'all'">
    where title like #{pattern}
      or detail like #{pattern}
      </when>
      <otherwise>
      where ${searchOption} like #{pattern}
      </otherwise>
      </choose>
    order by product_id asc

  </select>


<!-- 검색기능 추가 끝 -->
  
    <update id="increaseViewCount" parameterType="int">
    update product set
      view_count = view_count + 1
    where product_id=#{value}
  </update>
  
  <insert id="insert" parameterType="Product" useGeneratedKeys="true" keyColumn="product_id" keyProperty="productNo">
    insert into product(title, price, detail, stock, discount)
    values(#{title},#{price},#{detail},#{stock},#{discount}) 
  </insert>
  
  <update id="update" parameterType="Product">
    update product set
    title=#{title},
    price=#{price},
    detail=#{detail},
    stock=#{stock},
    discount=#{discount}
    where product_id=#{productNo}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from product
    where product_id=#{value}
  </delete>
  
  
  
</mapper>